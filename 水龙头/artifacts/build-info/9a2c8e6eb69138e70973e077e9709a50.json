{
	"id": "9a2c8e6eb69138e70973e077e9709a50",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"水龙头/Faucet.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// WTF Solidity by 0xAA\r\nimport \"../ERC20/IERC20.sol\";\r\npragma solidity ^0.8.4;\r\n\r\ncontract Faucet{\r\n    uint256 public allowanceA = 100;\r\n    address public tokenContract;\r\n    mapping(address => bool) public requestAddress;\r\n    \r\n    event SendToken(address indexed Receiver, uint256 indexed Amount);\r\n\r\n    constructor(address _tokenContract){\r\n        tokenContract = _tokenContract;\r\n    }\r\n\r\n    function send() external view{\r\n        require( requestAddress[msg.sender] == true ,\"The address has get!\");\r\n        IERC20 t = IERC20(tokenContract);\r\n        require(t.balanceOf(address(this)) >= allowanceA,\"Faucet Empty!\");\r\n\r\n    }\r\n}"
			},
			"ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// WTF Solidity by 0xAA\r\n\r\npragma solidity ^0.8.4;\r\n\r\n/**\r\n * @dev ERC20 接口合约.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev 释放条件：当 `value` 单位的货币从账户 (`from`) 转账到另一账户 (`to`)时.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev 释放条件：当 `value` 单位的货币从账户 (`owner`) 授权给另一账户 (`spender`)时.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev 返回代币总供给.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev 返回账户`account`所持有的代币数.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev 转账 `amount` 单位代币，从调用者账户到另一账户 `to`.\r\n     *\r\n     * 如果成功，返回 `true`.\r\n     *\r\n     * 释放 {Transfer} 事件.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev 返回`owner`账户授权给`spender`账户的额度，默认为0。\r\n     *\r\n     * 当{approve} 或 {transferFrom} 被调用时，`allowance`会改变.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev 调用者账户给`spender`账户授权 `amount`数量代币。\r\n     *\r\n     * 如果成功，返回 `true`.\r\n     *\r\n     * 释放 {Approval} 事件.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev 通过授权机制，从`from`账户向`to`账户转账`amount`数量代币。转账的部分会从调用者的`allowance`中扣除。\r\n     *\r\n     * 如果成功，返回 `true`.\r\n     *\r\n     * 释放 {Transfer} 事件.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC20 接口合约.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "释放条件：当 `value` 单位的货币从账户 (`owner`) 授权给另一账户 (`spender`)时."
							},
							"Transfer(address,address,uint256)": {
								"details": "释放条件：当 `value` 单位的货币从账户 (`from`) 转账到另一账户 (`to`)时."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "返回`owner`账户授权给`spender`账户的额度，默认为0。 当{approve} 或 {transferFrom} 被调用时，`allowance`会改变."
							},
							"approve(address,uint256)": {
								"details": "调用者账户给`spender`账户授权 `amount`数量代币。 如果成功，返回 `true`. 释放 {Approval} 事件."
							},
							"balanceOf(address)": {
								"details": "返回账户`account`所持有的代币数."
							},
							"totalSupply()": {
								"details": "返回代币总供给."
							},
							"transfer(address,uint256)": {
								"details": "转账 `amount` 单位代币，从调用者账户到另一账户 `to`. 如果成功，返回 `true`. 释放 {Transfer} 事件."
							},
							"transferFrom(address,address,uint256)": {
								"details": "通过授权机制，从`from`账户向`to`账户转账`amount`数量代币。转账的部分会从调用者的`allowance`中扣除。 如果成功，返回 `true`. 释放 {Transfer} 事件."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC20 \\u63a5\\u53e3\\u5408\\u7ea6.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"\\u91ca\\u653e\\u6761\\u4ef6\\uff1a\\u5f53 `value` \\u5355\\u4f4d\\u7684\\u8d27\\u5e01\\u4ece\\u8d26\\u6237 (`owner`) \\u6388\\u6743\\u7ed9\\u53e6\\u4e00\\u8d26\\u6237 (`spender`)\\u65f6.\"},\"Transfer(address,address,uint256)\":{\"details\":\"\\u91ca\\u653e\\u6761\\u4ef6\\uff1a\\u5f53 `value` \\u5355\\u4f4d\\u7684\\u8d27\\u5e01\\u4ece\\u8d26\\u6237 (`from`) \\u8f6c\\u8d26\\u5230\\u53e6\\u4e00\\u8d26\\u6237 (`to`)\\u65f6.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"\\u8fd4\\u56de`owner`\\u8d26\\u6237\\u6388\\u6743\\u7ed9`spender`\\u8d26\\u6237\\u7684\\u989d\\u5ea6\\uff0c\\u9ed8\\u8ba4\\u4e3a0\\u3002 \\u5f53{approve} \\u6216 {transferFrom} \\u88ab\\u8c03\\u7528\\u65f6\\uff0c`allowance`\\u4f1a\\u6539\\u53d8.\"},\"approve(address,uint256)\":{\"details\":\"\\u8c03\\u7528\\u8005\\u8d26\\u6237\\u7ed9`spender`\\u8d26\\u6237\\u6388\\u6743 `amount`\\u6570\\u91cf\\u4ee3\\u5e01\\u3002 \\u5982\\u679c\\u6210\\u529f\\uff0c\\u8fd4\\u56de `true`. \\u91ca\\u653e {Approval} \\u4e8b\\u4ef6.\"},\"balanceOf(address)\":{\"details\":\"\\u8fd4\\u56de\\u8d26\\u6237`account`\\u6240\\u6301\\u6709\\u7684\\u4ee3\\u5e01\\u6570.\"},\"totalSupply()\":{\"details\":\"\\u8fd4\\u56de\\u4ee3\\u5e01\\u603b\\u4f9b\\u7ed9.\"},\"transfer(address,uint256)\":{\"details\":\"\\u8f6c\\u8d26 `amount` \\u5355\\u4f4d\\u4ee3\\u5e01\\uff0c\\u4ece\\u8c03\\u7528\\u8005\\u8d26\\u6237\\u5230\\u53e6\\u4e00\\u8d26\\u6237 `to`. \\u5982\\u679c\\u6210\\u529f\\uff0c\\u8fd4\\u56de `true`. \\u91ca\\u653e {Transfer} \\u4e8b\\u4ef6.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"\\u901a\\u8fc7\\u6388\\u6743\\u673a\\u5236\\uff0c\\u4ece`from`\\u8d26\\u6237\\u5411`to`\\u8d26\\u6237\\u8f6c\\u8d26`amount`\\u6570\\u91cf\\u4ee3\\u5e01\\u3002\\u8f6c\\u8d26\\u7684\\u90e8\\u5206\\u4f1a\\u4ece\\u8c03\\u7528\\u8005\\u7684`allowance`\\u4e2d\\u6263\\u9664\\u3002 \\u5982\\u679c\\u6210\\u529f\\uff0c\\u8fd4\\u56de `true`. \\u91ca\\u653e {Transfer} \\u4e8b\\u4ef6.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/IERC20.sol\":{\"keccak256\":\"0x45e083595645ce346eca36a83c5aea73e3955314709dadab861fa7fa091c1af3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6910705030ee7e44f036c5de940030badc4d8070ce1c5ca8cfdf2f4366a693c0\",\"dweb:/ipfs/QmfNzDH2pwu92sAsz4LdeBhx1cwauZvNUcyhMC85oVhNgb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"水龙头/Faucet.sol": {
				"Faucet": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenContract",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "Receiver",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "Amount",
									"type": "uint256"
								}
							],
							"name": "SendToken",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "allowanceA",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "requestAddress",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "send",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenContract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":116:676  contract Faucet{\r... */\n  mstore(0x40, 0x80)\n    /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":166:169  100 */\n  0x64\n    /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":138:169  uint256 public allowanceA = 100 */\n  0x00\n  sstore\n    /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":344:428  constructor(address _tokenContract){\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":406:420  _tokenContract */\n  dup1\n    /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":390:403  tokenContract */\n  0x01\n  0x00\n    /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":390:420  tokenContract = _tokenContract */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":344:428  constructor(address _tokenContract){\r... */\n  pop\n    /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":116:676  contract Faucet{\r... */\n  jump(tag_6)\n    /* \"#utility.yul\":7:150   */\ntag_8:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_10\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_11\n  jump\t// in\ntag_10:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:507   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":275:277   */\n  0x20\n    /* \"#utility.yul\":263:272   */\n  dup3\n    /* \"#utility.yul\":254:261   */\n  dup5\n    /* \"#utility.yul\":250:273   */\n  sub\n    /* \"#utility.yul\":246:278   */\n  slt\n    /* \"#utility.yul\":243:362   */\n  iszero\n  tag_13\n  jumpi\n    /* \"#utility.yul\":281:360   */\n  tag_14\n  tag_15\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":243:362   */\ntag_13:\n    /* \"#utility.yul\":401:402   */\n  0x00\n    /* \"#utility.yul\":426:490   */\n  tag_16\n    /* \"#utility.yul\":482:489   */\n  dup5\n    /* \"#utility.yul\":473:479   */\n  dup3\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":426:490   */\n  tag_8\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":416:490   */\n  swap2\n  pop\n    /* \"#utility.yul\":372:500   */\n  pop\n    /* \"#utility.yul\":156:507   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":594:690   */\ntag_19:\n    /* \"#utility.yul\":631:638   */\n  0x00\n    /* \"#utility.yul\":660:684   */\n  tag_21\n    /* \"#utility.yul\":678:683   */\n  dup3\n    /* \"#utility.yul\":660:684   */\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":649:684   */\n  swap1\n  pop\n    /* \"#utility.yul\":594:690   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:822   */\ntag_22:\n    /* \"#utility.yul\":733:740   */\n  0x00\n    /* \"#utility.yul\":773:815   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":766:771   */\n  dup3\n    /* \"#utility.yul\":762:816   */\n  and\n    /* \"#utility.yul\":751:816   */\n  swap1\n  pop\n    /* \"#utility.yul\":696:822   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":951:1068   */\ntag_15:\n    /* \"#utility.yul\":1060:1061   */\n  0x00\n    /* \"#utility.yul\":1057:1058   */\n  dup1\n    /* \"#utility.yul\":1050:1062   */\n  revert\n    /* \"#utility.yul\":1074:1196   */\ntag_11:\n    /* \"#utility.yul\":1147:1171   */\n  tag_28\n    /* \"#utility.yul\":1165:1170   */\n  dup2\n    /* \"#utility.yul\":1147:1171   */\n  tag_19\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":1140:1145   */\n  dup2\n    /* \"#utility.yul\":1137:1172   */\n  eq\n    /* \"#utility.yul\":1127:1190   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1186:1187   */\n  0x00\n    /* \"#utility.yul\":1183:1184   */\n  dup1\n    /* \"#utility.yul\":1176:1188   */\n  revert\n    /* \"#utility.yul\":1127:1190   */\ntag_29:\n    /* \"#utility.yul\":1074:1196   */\n  pop\n  jump\t// out\n    /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":116:676  contract Faucet{\r... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":116:676  contract Faucet{\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x54b1f84f\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x55a373d6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb46300ec\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc44d5ddc\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":138:169  uint256 public allowanceA = 100 */\n    tag_3:\n      tag_7\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":176:204  address public tokenContract */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":436:673  function send() external view{\r... */\n    tag_5:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":211:257  mapping(address => bool) public requestAddress */\n    tag_6:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":138:169  uint256 public allowanceA = 100 */\n    tag_8:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":176:204  address public tokenContract */\n    tag_12:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":436:673  function send() external view{\r... */\n    tag_16:\n        /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":515:519  true */\n      0x01\n        /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":485:519  requestAddress[msg.sender] == true */\n      iszero\n      iszero\n        /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":485:499  requestAddress */\n      0x02\n        /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":485:511  requestAddress[msg.sender] */\n      0x00\n        /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":500:510  msg.sender */\n      caller\n        /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":485:511  requestAddress[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":485:519  requestAddress[msg.sender] == true */\n      iszero\n      iszero\n      eq\n        /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":476:544  require( requestAddress[msg.sender] == true ,\"The address has get!\") */\n      tag_24\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_25\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_24:\n        /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":555:563  IERC20 t */\n      0x00\n        /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":573:586  tokenContract */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":555:587  IERC20 t = IERC20(tokenContract) */\n      swap1\n      pop\n        /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":636:646  allowanceA */\n      sload(0x00)\n        /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":606:607  t */\n      dup2\n        /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":606:617  t.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":626:630  this */\n      address\n        /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":606:632  t.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_27\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_27:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_30\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_30:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":606:646  t.balanceOf(address(this)) >= allowanceA */\n      lt\n      iszero\n        /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":598:663  require(t.balanceOf(address(this)) >= allowanceA,\"Faucet Empty!\") */\n      tag_33\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_34\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_33:\n        /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":465:673  {\r... */\n      pop\n        /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":436:673  function send() external view{\r... */\n      jump\t// out\n        /* \"\\xe6\\xb0\\xb4\\xe9\\xbe\\x99\\xe5\\xa4\\xb4/Faucet.sol\":211:257  mapping(address => bool) public requestAddress */\n    tag_20:\n      mstore(0x20, 0x02)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_37:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_39\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:295   */\n    tag_41:\n        /* \"#utility.yul\":209:214   */\n      0x00\n        /* \"#utility.yul\":240:246   */\n      dup2\n        /* \"#utility.yul\":234:247   */\n      mload\n        /* \"#utility.yul\":225:247   */\n      swap1\n      pop\n        /* \"#utility.yul\":256:289   */\n      tag_43\n        /* \"#utility.yul\":283:288   */\n      dup2\n        /* \"#utility.yul\":256:289   */\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":152:295   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":301:630   */\n    tag_19:\n        /* \"#utility.yul\":360:366   */\n      0x00\n        /* \"#utility.yul\":409:411   */\n      0x20\n        /* \"#utility.yul\":397:406   */\n      dup3\n        /* \"#utility.yul\":388:395   */\n      dup5\n        /* \"#utility.yul\":384:407   */\n      sub\n        /* \"#utility.yul\":380:412   */\n      slt\n        /* \"#utility.yul\":377:496   */\n      iszero\n      tag_46\n      jumpi\n        /* \"#utility.yul\":415:494   */\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":377:496   */\n    tag_46:\n        /* \"#utility.yul\":535:536   */\n      0x00\n        /* \"#utility.yul\":560:613   */\n      tag_49\n        /* \"#utility.yul\":605:612   */\n      dup5\n        /* \"#utility.yul\":596:602   */\n      dup3\n        /* \"#utility.yul\":585:594   */\n      dup6\n        /* \"#utility.yul\":581:603   */\n      add\n        /* \"#utility.yul\":560:613   */\n      tag_37\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":550:613   */\n      swap2\n      pop\n        /* \"#utility.yul\":506:623   */\n      pop\n        /* \"#utility.yul\":301:630   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":636:987   */\n    tag_32:\n        /* \"#utility.yul\":706:712   */\n      0x00\n        /* \"#utility.yul\":755:757   */\n      0x20\n        /* \"#utility.yul\":743:752   */\n      dup3\n        /* \"#utility.yul\":734:741   */\n      dup5\n        /* \"#utility.yul\":730:753   */\n      sub\n        /* \"#utility.yul\":726:758   */\n      slt\n        /* \"#utility.yul\":723:842   */\n      iszero\n      tag_51\n      jumpi\n        /* \"#utility.yul\":761:840   */\n      tag_52\n      tag_48\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":723:842   */\n    tag_51:\n        /* \"#utility.yul\":881:882   */\n      0x00\n        /* \"#utility.yul\":906:970   */\n      tag_53\n        /* \"#utility.yul\":962:969   */\n      dup5\n        /* \"#utility.yul\":953:959   */\n      dup3\n        /* \"#utility.yul\":942:951   */\n      dup6\n        /* \"#utility.yul\":938:960   */\n      add\n        /* \"#utility.yul\":906:970   */\n      tag_41\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":896:970   */\n      swap2\n      pop\n        /* \"#utility.yul\":852:980   */\n      pop\n        /* \"#utility.yul\":636:987   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":993:1111   */\n    tag_54:\n        /* \"#utility.yul\":1080:1104   */\n      tag_56\n        /* \"#utility.yul\":1098:1103   */\n      dup2\n        /* \"#utility.yul\":1080:1104   */\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1075:1078   */\n      dup3\n        /* \"#utility.yul\":1068:1105   */\n      mstore\n        /* \"#utility.yul\":993:1111   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1117:1226   */\n    tag_58:\n        /* \"#utility.yul\":1198:1219   */\n      tag_60\n        /* \"#utility.yul\":1213:1218   */\n      dup2\n        /* \"#utility.yul\":1198:1219   */\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":1193:1196   */\n      dup3\n        /* \"#utility.yul\":1186:1220   */\n      mstore\n        /* \"#utility.yul\":1117:1226   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1232:1598   */\n    tag_62:\n        /* \"#utility.yul\":1374:1377   */\n      0x00\n        /* \"#utility.yul\":1395:1462   */\n      tag_64\n        /* \"#utility.yul\":1459:1461   */\n      0x0d\n        /* \"#utility.yul\":1454:1457   */\n      dup4\n        /* \"#utility.yul\":1395:1462   */\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1388:1462   */\n      swap2\n      pop\n        /* \"#utility.yul\":1471:1564   */\n      tag_66\n        /* \"#utility.yul\":1560:1563   */\n      dup3\n        /* \"#utility.yul\":1471:1564   */\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":1589:1591   */\n      0x20\n        /* \"#utility.yul\":1584:1587   */\n      dup3\n        /* \"#utility.yul\":1580:1592   */\n      add\n        /* \"#utility.yul\":1573:1592   */\n      swap1\n      pop\n        /* \"#utility.yul\":1232:1598   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1604:1970   */\n    tag_68:\n        /* \"#utility.yul\":1746:1749   */\n      0x00\n        /* \"#utility.yul\":1767:1834   */\n      tag_70\n        /* \"#utility.yul\":1831:1833   */\n      0x14\n        /* \"#utility.yul\":1826:1829   */\n      dup4\n        /* \"#utility.yul\":1767:1834   */\n      tag_65\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1760:1834   */\n      swap2\n      pop\n        /* \"#utility.yul\":1843:1936   */\n      tag_71\n        /* \"#utility.yul\":1932:1935   */\n      dup3\n        /* \"#utility.yul\":1843:1936   */\n      tag_72\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1961:1963   */\n      0x20\n        /* \"#utility.yul\":1956:1959   */\n      dup3\n        /* \"#utility.yul\":1952:1964   */\n      add\n        /* \"#utility.yul\":1945:1964   */\n      swap1\n      pop\n        /* \"#utility.yul\":1604:1970   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1976:2094   */\n    tag_73:\n        /* \"#utility.yul\":2063:2087   */\n      tag_75\n        /* \"#utility.yul\":2081:2086   */\n      dup2\n        /* \"#utility.yul\":2063:2087   */\n      tag_76\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2058:2061   */\n      dup3\n        /* \"#utility.yul\":2051:2088   */\n      mstore\n        /* \"#utility.yul\":1976:2094   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2100:2322   */\n    tag_14:\n        /* \"#utility.yul\":2193:2197   */\n      0x00\n        /* \"#utility.yul\":2231:2233   */\n      0x20\n        /* \"#utility.yul\":2220:2229   */\n      dup3\n        /* \"#utility.yul\":2216:2234   */\n      add\n        /* \"#utility.yul\":2208:2234   */\n      swap1\n      pop\n        /* \"#utility.yul\":2244:2315   */\n      tag_78\n        /* \"#utility.yul\":2312:2313   */\n      0x00\n        /* \"#utility.yul\":2301:2310   */\n      dup4\n        /* \"#utility.yul\":2297:2314   */\n      add\n        /* \"#utility.yul\":2288:2294   */\n      dup5\n        /* \"#utility.yul\":2244:2315   */\n      tag_54\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":2100:2322   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2328:2538   */\n    tag_22:\n        /* \"#utility.yul\":2415:2419   */\n      0x00\n        /* \"#utility.yul\":2453:2455   */\n      0x20\n        /* \"#utility.yul\":2442:2451   */\n      dup3\n        /* \"#utility.yul\":2438:2456   */\n      add\n        /* \"#utility.yul\":2430:2456   */\n      swap1\n      pop\n        /* \"#utility.yul\":2466:2531   */\n      tag_80\n        /* \"#utility.yul\":2528:2529   */\n      0x00\n        /* \"#utility.yul\":2517:2526   */\n      dup4\n        /* \"#utility.yul\":2513:2530   */\n      add\n        /* \"#utility.yul\":2504:2510   */\n      dup5\n        /* \"#utility.yul\":2466:2531   */\n      tag_58\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2328:2538   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2544:2963   */\n    tag_35:\n        /* \"#utility.yul\":2710:2714   */\n      0x00\n        /* \"#utility.yul\":2748:2750   */\n      0x20\n        /* \"#utility.yul\":2737:2746   */\n      dup3\n        /* \"#utility.yul\":2733:2751   */\n      add\n        /* \"#utility.yul\":2725:2751   */\n      swap1\n      pop\n        /* \"#utility.yul\":2797:2806   */\n      dup2\n        /* \"#utility.yul\":2791:2795   */\n      dup2\n        /* \"#utility.yul\":2787:2807   */\n      sub\n        /* \"#utility.yul\":2783:2784   */\n      0x00\n        /* \"#utility.yul\":2772:2781   */\n      dup4\n        /* \"#utility.yul\":2768:2785   */\n      add\n        /* \"#utility.yul\":2761:2808   */\n      mstore\n        /* \"#utility.yul\":2825:2956   */\n      tag_82\n        /* \"#utility.yul\":2951:2955   */\n      dup2\n        /* \"#utility.yul\":2825:2956   */\n      tag_62\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":2817:2956   */\n      swap1\n      pop\n        /* \"#utility.yul\":2544:2963   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2969:3388   */\n    tag_26:\n        /* \"#utility.yul\":3135:3139   */\n      0x00\n        /* \"#utility.yul\":3173:3175   */\n      0x20\n        /* \"#utility.yul\":3162:3171   */\n      dup3\n        /* \"#utility.yul\":3158:3176   */\n      add\n        /* \"#utility.yul\":3150:3176   */\n      swap1\n      pop\n        /* \"#utility.yul\":3222:3231   */\n      dup2\n        /* \"#utility.yul\":3216:3220   */\n      dup2\n        /* \"#utility.yul\":3212:3232   */\n      sub\n        /* \"#utility.yul\":3208:3209   */\n      0x00\n        /* \"#utility.yul\":3197:3206   */\n      dup4\n        /* \"#utility.yul\":3193:3210   */\n      add\n        /* \"#utility.yul\":3186:3233   */\n      mstore\n        /* \"#utility.yul\":3250:3381   */\n      tag_84\n        /* \"#utility.yul\":3376:3380   */\n      dup2\n        /* \"#utility.yul\":3250:3381   */\n      tag_68\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":3242:3381   */\n      swap1\n      pop\n        /* \"#utility.yul\":2969:3388   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3394:3616   */\n    tag_10:\n        /* \"#utility.yul\":3487:3491   */\n      0x00\n        /* \"#utility.yul\":3525:3527   */\n      0x20\n        /* \"#utility.yul\":3514:3523   */\n      dup3\n        /* \"#utility.yul\":3510:3528   */\n      add\n        /* \"#utility.yul\":3502:3528   */\n      swap1\n      pop\n        /* \"#utility.yul\":3538:3609   */\n      tag_86\n        /* \"#utility.yul\":3606:3607   */\n      0x00\n        /* \"#utility.yul\":3595:3604   */\n      dup4\n        /* \"#utility.yul\":3591:3608   */\n      add\n        /* \"#utility.yul\":3582:3588   */\n      dup5\n        /* \"#utility.yul\":3538:3609   */\n      tag_73\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":3394:3616   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3703:3872   */\n    tag_65:\n        /* \"#utility.yul\":3787:3798   */\n      0x00\n        /* \"#utility.yul\":3821:3827   */\n      dup3\n        /* \"#utility.yul\":3816:3819   */\n      dup3\n        /* \"#utility.yul\":3809:3828   */\n      mstore\n        /* \"#utility.yul\":3861:3865   */\n      0x20\n        /* \"#utility.yul\":3856:3859   */\n      dup3\n        /* \"#utility.yul\":3852:3866   */\n      add\n        /* \"#utility.yul\":3837:3866   */\n      swap1\n      pop\n        /* \"#utility.yul\":3703:3872   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3878:3974   */\n    tag_57:\n        /* \"#utility.yul\":3915:3922   */\n      0x00\n        /* \"#utility.yul\":3944:3968   */\n      tag_91\n        /* \"#utility.yul\":3962:3967   */\n      dup3\n        /* \"#utility.yul\":3944:3968   */\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":3933:3968   */\n      swap1\n      pop\n        /* \"#utility.yul\":3878:3974   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3980:4070   */\n    tag_61:\n        /* \"#utility.yul\":4014:4021   */\n      0x00\n        /* \"#utility.yul\":4057:4062   */\n      dup2\n        /* \"#utility.yul\":4050:4063   */\n      iszero\n        /* \"#utility.yul\":4043:4064   */\n      iszero\n        /* \"#utility.yul\":4032:4064   */\n      swap1\n      pop\n        /* \"#utility.yul\":3980:4070   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4076:4202   */\n    tag_92:\n        /* \"#utility.yul\":4113:4120   */\n      0x00\n        /* \"#utility.yul\":4153:4195   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4146:4151   */\n      dup3\n        /* \"#utility.yul\":4142:4196   */\n      and\n        /* \"#utility.yul\":4131:4196   */\n      swap1\n      pop\n        /* \"#utility.yul\":4076:4202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4208:4285   */\n    tag_76:\n        /* \"#utility.yul\":4245:4252   */\n      0x00\n        /* \"#utility.yul\":4274:4279   */\n      dup2\n        /* \"#utility.yul\":4263:4279   */\n      swap1\n      pop\n        /* \"#utility.yul\":4208:4285   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4414:4531   */\n    tag_48:\n        /* \"#utility.yul\":4523:4524   */\n      0x00\n        /* \"#utility.yul\":4520:4521   */\n      dup1\n        /* \"#utility.yul\":4513:4525   */\n      revert\n        /* \"#utility.yul\":4537:4700   */\n    tag_67:\n        /* \"#utility.yul\":4677:4692   */\n      0x46617563657420456d7074792100000000000000000000000000000000000000\n        /* \"#utility.yul\":4673:4674   */\n      0x00\n        /* \"#utility.yul\":4665:4671   */\n      dup3\n        /* \"#utility.yul\":4661:4675   */\n      add\n        /* \"#utility.yul\":4654:4693   */\n      mstore\n        /* \"#utility.yul\":4537:4700   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4706:4876   */\n    tag_72:\n        /* \"#utility.yul\":4846:4868   */\n      0x5468652061646472657373206861732067657421000000000000000000000000\n        /* \"#utility.yul\":4842:4843   */\n      0x00\n        /* \"#utility.yul\":4834:4840   */\n      dup3\n        /* \"#utility.yul\":4830:4844   */\n      add\n        /* \"#utility.yul\":4823:4869   */\n      mstore\n        /* \"#utility.yul\":4706:4876   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4882:5004   */\n    tag_40:\n        /* \"#utility.yul\":4955:4979   */\n      tag_102\n        /* \"#utility.yul\":4973:4978   */\n      dup2\n        /* \"#utility.yul\":4955:4979   */\n      tag_57\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":4948:4953   */\n      dup2\n        /* \"#utility.yul\":4945:4980   */\n      eq\n        /* \"#utility.yul\":4935:4998   */\n      tag_103\n      jumpi\n        /* \"#utility.yul\":4994:4995   */\n      0x00\n        /* \"#utility.yul\":4991:4992   */\n      dup1\n        /* \"#utility.yul\":4984:4996   */\n      revert\n        /* \"#utility.yul\":4935:4998   */\n    tag_103:\n        /* \"#utility.yul\":4882:5004   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5010:5132   */\n    tag_44:\n        /* \"#utility.yul\":5083:5107   */\n      tag_105\n        /* \"#utility.yul\":5101:5106   */\n      dup2\n        /* \"#utility.yul\":5083:5107   */\n      tag_76\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":5076:5081   */\n      dup2\n        /* \"#utility.yul\":5073:5108   */\n      eq\n        /* \"#utility.yul\":5063:5126   */\n      tag_106\n      jumpi\n        /* \"#utility.yul\":5122:5123   */\n      0x00\n        /* \"#utility.yul\":5119:5120   */\n      dup1\n        /* \"#utility.yul\":5112:5124   */\n      revert\n        /* \"#utility.yul\":5063:5126   */\n    tag_106:\n        /* \"#utility.yul\":5010:5132   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122034875a921875040770ed82eca1bba27a36a9e580e412aa83e91620adcdeb176464736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_105": {
									"entryPoint": null,
									"id": 105,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 242,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:2",
														"type": ""
													}
												],
												"src": "7:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "233:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "279:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "281:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "281:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "281:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "254:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "263:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "250:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "250:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "275:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "246:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "246:32:2"
															},
															"nodeType": "YulIf",
															"src": "243:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "372:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "387:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "401:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "391:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "416:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "462:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "473:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "458:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "458:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "482:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "426:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "426:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "416:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:2",
														"type": ""
													}
												],
												"src": "156:351:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "553:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "563:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "579:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "573:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "573:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "563:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "546:6:2",
														"type": ""
													}
												],
												"src": "513:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "639:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "649:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "678:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "660:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "660:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "649:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "621:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "631:7:2",
														"type": ""
													}
												],
												"src": "594:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "741:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "751:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "766:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "773:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "762:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "762:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "751:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "723:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "733:7:2",
														"type": ""
													}
												],
												"src": "696:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "934:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "937:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "927:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "927:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "927:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "828:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1040:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1057:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1060:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1050:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1050:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1050:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "951:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1117:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1174:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1183:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1186:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1176:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1176:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1176:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1140:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1165:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1147:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1137:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1137:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1130:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1130:43:2"
															},
															"nodeType": "YulIf",
															"src": "1127:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1110:5:2",
														"type": ""
													}
												],
												"src": "1074:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052606460005534801561001557600080fd5b5060405161065638038061065683398181016040528101906100379190610093565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061010e565b60008151905061008d816100f7565b92915050565b6000602082840312156100a9576100a86100f2565b5b60006100b78482850161007e565b91505092915050565b60006100cb826100d2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610100816100c0565b811461010b57600080fd5b50565b6105398061011d6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806354b1f84f1461005157806355a373d61461006f578063b46300ec1461008d578063c44d5ddc14610097575b600080fd5b6100596100c7565b604051610066919061040a565b60405180910390f35b6100776100cd565b6040516100849190610394565b60405180910390f35b6100956100f3565b005b6100b160048036038101906100ac91906102c7565b61027d565b6040516100be91906103af565b60405180910390f35b60005481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60011515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610186576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017d906103ea565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000548173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101e99190610394565b60206040518083038186803b15801561020157600080fd5b505afa158015610215573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023991906102f4565b101561027a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610271906103ca565b60405180910390fd5b50565b60026020528060005260406000206000915054906101000a900460ff1681565b6000813590506102ac816104d5565b92915050565b6000815190506102c1816104ec565b92915050565b6000602082840312156102dd576102dc61047e565b5b60006102eb8482850161029d565b91505092915050565b60006020828403121561030a5761030961047e565b5b6000610318848285016102b2565b91505092915050565b61032a81610436565b82525050565b61033981610448565b82525050565b600061034c600d83610425565b915061035782610483565b602082019050919050565b600061036f601483610425565b915061037a826104ac565b602082019050919050565b61038e81610474565b82525050565b60006020820190506103a96000830184610321565b92915050565b60006020820190506103c46000830184610330565b92915050565b600060208201905081810360008301526103e38161033f565b9050919050565b6000602082019050818103600083015261040381610362565b9050919050565b600060208201905061041f6000830184610385565b92915050565b600082825260208201905092915050565b600061044182610454565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b7f46617563657420456d7074792100000000000000000000000000000000000000600082015250565b7f5468652061646472657373206861732067657421000000000000000000000000600082015250565b6104de81610436565b81146104e957600080fd5b50565b6104f581610474565b811461050057600080fd5b5056fea264697066735822122034875a921875040770ed82eca1bba27a36a9e580e412aa83e91620adcdeb176464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x64 PUSH1 0x0 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x656 CODESIZE SUB DUP1 PUSH2 0x656 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x37 SWAP2 SWAP1 PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x10E JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x8D DUP2 PUSH2 0xF7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA9 JUMPI PUSH2 0xA8 PUSH2 0xF2 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xB7 DUP5 DUP3 DUP6 ADD PUSH2 0x7E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCB DUP3 PUSH2 0xD2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x100 DUP2 PUSH2 0xC0 JUMP JUMPDEST DUP2 EQ PUSH2 0x10B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x539 DUP1 PUSH2 0x11D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x54B1F84F EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x55A373D6 EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0xB46300EC EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0xC44D5DDC EQ PUSH2 0x97 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x40A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH2 0xCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x394 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0xF3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x2C7 JUMP JUMPDEST PUSH2 0x27D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x3AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x186 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D SWAP1 PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x394 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x215 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x2F4 JUMP JUMPDEST LT ISZERO PUSH2 0x27A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x271 SWAP1 PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AC DUP2 PUSH2 0x4D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C1 DUP2 PUSH2 0x4EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DD JUMPI PUSH2 0x2DC PUSH2 0x47E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2EB DUP5 DUP3 DUP6 ADD PUSH2 0x29D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30A JUMPI PUSH2 0x309 PUSH2 0x47E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x318 DUP5 DUP3 DUP6 ADD PUSH2 0x2B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x32A DUP2 PUSH2 0x436 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x339 DUP2 PUSH2 0x448 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34C PUSH1 0xD DUP4 PUSH2 0x425 JUMP JUMPDEST SWAP2 POP PUSH2 0x357 DUP3 PUSH2 0x483 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36F PUSH1 0x14 DUP4 PUSH2 0x425 JUMP JUMPDEST SWAP2 POP PUSH2 0x37A DUP3 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38E DUP2 PUSH2 0x474 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x321 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3C4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x330 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E3 DUP2 PUSH2 0x33F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x403 DUP2 PUSH2 0x362 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x41F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x385 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x441 DUP3 PUSH2 0x454 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x46617563657420456D7074792100000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5468652061646472657373206861732067657421000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x4DE DUP2 PUSH2 0x436 JUMP JUMPDEST DUP2 EQ PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4F5 DUP2 PUSH2 0x474 JUMP JUMPDEST DUP2 EQ PUSH2 0x500 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE DUP8 GAS SWAP3 XOR PUSH22 0x40770ED82ECA1BBA27A36A9E580E412AA83E91620AD 0xCD 0xEB OR PUSH5 0x64736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "116:560:1:-:0;;;166:3;138:31;;344:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;406:14;390:13;;:30;;;;;;;;;;;;;;;;;;344:84;116:560;;7:143:2;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:351::-;226:6;275:2;263:9;254:7;250:23;246:32;243:119;;;281:79;;:::i;:::-;243:119;401:1;426:64;482:7;473:6;462:9;458:22;426:64;:::i;:::-;416:74;;372:128;156:351;;;;:::o;594:96::-;631:7;660:24;678:5;660:24;:::i;:::-;649:35;;594:96;;;:::o;696:126::-;733:7;773:42;766:5;762:54;751:65;;696:126;;;:::o;951:117::-;1060:1;1057;1050:12;1074:122;1147:24;1165:5;1147:24;:::i;:::-;1140:5;1137:35;1127:63;;1186:1;1183;1176:12;1127:63;1074:122;:::o;116:560:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@allowanceA_83": {
									"entryPoint": 199,
									"id": 83,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@requestAddress_89": {
									"entryPoint": 637,
									"id": 89,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@send_139": {
									"entryPoint": 243,
									"id": 139,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenContract_85": {
									"entryPoint": 205,
									"id": 85,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 669,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_b599f9a995c4b4245205b1dcd3cd52f2b440af1a93e11e35e14992fecf0a3bc7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 831,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e49545dc5a09be773f86ee453e8e530ac1fcba422dee72705ccff496f57df94f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 866,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 943,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b599f9a995c4b4245205b1dcd3cd52f2b440af1a93e11e35e14992fecf0a3bc7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e49545dc5a09be773f86ee453e8e530ac1fcba422dee72705ccff496f57df94f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1034,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1150,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_b599f9a995c4b4245205b1dcd3cd52f2b440af1a93e11e35e14992fecf0a3bc7": {
									"entryPoint": 1155,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e49545dc5a09be773f86ee453e8e530ac1fcba422dee72705ccff496f57df94f": {
									"entryPoint": 1196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1260,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5135:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:2"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "7:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "215:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "225:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "240:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "234:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "234:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "225:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "283:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "256:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "256:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "256:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "193:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "201:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "209:5:2",
														"type": ""
													}
												],
												"src": "152:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "367:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "413:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "415:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "415:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "415:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "388:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "397:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "384:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "384:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "409:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "380:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "380:32:2"
															},
															"nodeType": "YulIf",
															"src": "377:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "506:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "521:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "535:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "525:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "550:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "585:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "596:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "581:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "581:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "605:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "560:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "560:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "550:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "337:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "348:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "360:6:2",
														"type": ""
													}
												],
												"src": "301:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "713:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "759:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "761:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "761:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "761:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "734:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "743:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "730:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "730:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "755:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "726:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:32:2"
															},
															"nodeType": "YulIf",
															"src": "723:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "852:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "867:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "881:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "871:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "896:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "942:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "953:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "938:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "938:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "962:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "906:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "906:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "896:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "683:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "694:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "706:6:2",
														"type": ""
													}
												],
												"src": "636:351:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1058:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1075:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1098:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1080:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1080:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1068:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1068:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1068:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1046:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1053:3:2",
														"type": ""
													}
												],
												"src": "993:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1176:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1193:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1213:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1198:14:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1198:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1186:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1186:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1186:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1164:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1171:3:2",
														"type": ""
													}
												],
												"src": "1117:109:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1378:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1388:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1454:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1459:2:2",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1395:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1388:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1560:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b599f9a995c4b4245205b1dcd3cd52f2b440af1a93e11e35e14992fecf0a3bc7",
																	"nodeType": "YulIdentifier",
																	"src": "1471:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1471:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1471:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1573:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1584:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1589:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1580:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1580:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1573:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b599f9a995c4b4245205b1dcd3cd52f2b440af1a93e11e35e14992fecf0a3bc7_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1366:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1374:3:2",
														"type": ""
													}
												],
												"src": "1232:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1750:220:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1760:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1826:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1831:2:2",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1767:58:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1767:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1760:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1932:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e49545dc5a09be773f86ee453e8e530ac1fcba422dee72705ccff496f57df94f",
																	"nodeType": "YulIdentifier",
																	"src": "1843:88:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1843:93:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1843:93:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1945:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1956:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1961:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1952:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1952:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1945:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e49545dc5a09be773f86ee453e8e530ac1fcba422dee72705ccff496f57df94f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1738:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1746:3:2",
														"type": ""
													}
												],
												"src": "1604:366:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2041:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2058:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2081:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2063:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2063:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2029:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2036:3:2",
														"type": ""
													}
												],
												"src": "1976:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2198:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2208:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2220:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2231:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2216:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2208:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2288:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2301:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2312:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2297:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2297:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2244:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2244:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2244:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2170:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2182:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2193:4:2",
														"type": ""
													}
												],
												"src": "2100:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2420:118:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2430:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2442:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2453:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2438:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2438:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2430:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2504:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2517:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2528:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2513:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2513:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2466:37:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2466:65:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2466:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2392:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2404:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2415:4:2",
														"type": ""
													}
												],
												"src": "2328:210:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2715:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2725:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2737:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2748:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2733:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2733:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2725:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2772:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2783:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2768:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2768:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2791:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2797:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2787:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2787:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2761:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2761:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2761:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2817:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2951:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b599f9a995c4b4245205b1dcd3cd52f2b440af1a93e11e35e14992fecf0a3bc7_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2825:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2825:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2817:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b599f9a995c4b4245205b1dcd3cd52f2b440af1a93e11e35e14992fecf0a3bc7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2695:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2710:4:2",
														"type": ""
													}
												],
												"src": "2544:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3140:248:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3150:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3162:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3173:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3158:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3158:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3150:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3197:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3208:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3193:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3193:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3216:4:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3222:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3212:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3212:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3186:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3186:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3186:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3242:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3376:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e49545dc5a09be773f86ee453e8e530ac1fcba422dee72705ccff496f57df94f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3250:124:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3250:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3242:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e49545dc5a09be773f86ee453e8e530ac1fcba422dee72705ccff496f57df94f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3120:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3135:4:2",
														"type": ""
													}
												],
												"src": "2969:419:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3492:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3502:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3514:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3525:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3510:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3502:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3582:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3595:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3606:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3591:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3591:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3538:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3538:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3538:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3464:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3476:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3487:4:2",
														"type": ""
													}
												],
												"src": "3394:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3662:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3672:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3688:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3682:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3682:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "3672:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3655:6:2",
														"type": ""
													}
												],
												"src": "3622:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3799:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3816:3:2"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3821:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3809:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3809:19:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3809:19:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3837:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3856:3:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3861:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3852:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3852:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3837:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3771:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3776:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3787:11:2",
														"type": ""
													}
												],
												"src": "3703:169:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3923:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3933:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3962:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3944:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3944:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3933:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3905:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3915:7:2",
														"type": ""
													}
												],
												"src": "3878:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4022:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4032:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4057:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4050:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4050:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4043:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4043:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4032:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4004:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4014:7:2",
														"type": ""
													}
												],
												"src": "3980:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4121:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4131:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4146:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4153:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4142:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4142:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4131:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4103:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4113:7:2",
														"type": ""
													}
												],
												"src": "4076:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4253:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4263:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4274:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4263:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4235:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4245:7:2",
														"type": ""
													}
												],
												"src": "4208:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4380:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4397:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4400:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4390:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4390:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4390:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "4291:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4503:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4520:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4523:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4513:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4513:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4513:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "4414:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4643:57:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4665:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4673:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4661:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4661:14:2"
																	},
																	{
																		"hexValue": "46617563657420456d70747921",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4677:15:2",
																		"type": "",
																		"value": "Faucet Empty!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4654:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:39:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4654:39:2"
														}
													]
												},
												"name": "store_literal_in_memory_b599f9a995c4b4245205b1dcd3cd52f2b440af1a93e11e35e14992fecf0a3bc7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4635:6:2",
														"type": ""
													}
												],
												"src": "4537:163:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4812:64:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4834:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4842:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4830:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4830:14:2"
																	},
																	{
																		"hexValue": "5468652061646472657373206861732067657421",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4846:22:2",
																		"type": "",
																		"value": "The address has get!"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4823:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4823:46:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4823:46:2"
														}
													]
												},
												"name": "store_literal_in_memory_e49545dc5a09be773f86ee453e8e530ac1fcba422dee72705ccff496f57df94f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4804:6:2",
														"type": ""
													}
												],
												"src": "4706:170:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4925:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4982:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4991:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4994:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4984:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4984:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4984:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4948:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4973:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4955:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4955:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4945:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4945:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4938:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4938:43:2"
															},
															"nodeType": "YulIf",
															"src": "4935:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4918:5:2",
														"type": ""
													}
												],
												"src": "4882:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5053:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5110:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5119:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5122:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5112:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5112:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5112:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5076:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5101:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5083:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5083:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5073:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5073:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5066:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5066:43:2"
															},
															"nodeType": "YulIf",
															"src": "5063:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5046:5:2",
														"type": ""
													}
												],
												"src": "5010:122:2"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_b599f9a995c4b4245205b1dcd3cd52f2b440af1a93e11e35e14992fecf0a3bc7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_b599f9a995c4b4245205b1dcd3cd52f2b440af1a93e11e35e14992fecf0a3bc7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e49545dc5a09be773f86ee453e8e530ac1fcba422dee72705ccff496f57df94f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_e49545dc5a09be773f86ee453e8e530ac1fcba422dee72705ccff496f57df94f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b599f9a995c4b4245205b1dcd3cd52f2b440af1a93e11e35e14992fecf0a3bc7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b599f9a995c4b4245205b1dcd3cd52f2b440af1a93e11e35e14992fecf0a3bc7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e49545dc5a09be773f86ee453e8e530ac1fcba422dee72705ccff496f57df94f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e49545dc5a09be773f86ee453e8e530ac1fcba422dee72705ccff496f57df94f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_b599f9a995c4b4245205b1dcd3cd52f2b440af1a93e11e35e14992fecf0a3bc7(memPtr) {\n\n        mstore(add(memPtr, 0), \"Faucet Empty!\")\n\n    }\n\n    function store_literal_in_memory_e49545dc5a09be773f86ee453e8e530ac1fcba422dee72705ccff496f57df94f(memPtr) {\n\n        mstore(add(memPtr, 0), \"The address has get!\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c806354b1f84f1461005157806355a373d61461006f578063b46300ec1461008d578063c44d5ddc14610097575b600080fd5b6100596100c7565b604051610066919061040a565b60405180910390f35b6100776100cd565b6040516100849190610394565b60405180910390f35b6100956100f3565b005b6100b160048036038101906100ac91906102c7565b61027d565b6040516100be91906103af565b60405180910390f35b60005481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60011515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514610186576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017d906103ea565b60405180910390fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000548173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101e99190610394565b60206040518083038186803b15801561020157600080fd5b505afa158015610215573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061023991906102f4565b101561027a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610271906103ca565b60405180910390fd5b50565b60026020528060005260406000206000915054906101000a900460ff1681565b6000813590506102ac816104d5565b92915050565b6000815190506102c1816104ec565b92915050565b6000602082840312156102dd576102dc61047e565b5b60006102eb8482850161029d565b91505092915050565b60006020828403121561030a5761030961047e565b5b6000610318848285016102b2565b91505092915050565b61032a81610436565b82525050565b61033981610448565b82525050565b600061034c600d83610425565b915061035782610483565b602082019050919050565b600061036f601483610425565b915061037a826104ac565b602082019050919050565b61038e81610474565b82525050565b60006020820190506103a96000830184610321565b92915050565b60006020820190506103c46000830184610330565b92915050565b600060208201905081810360008301526103e38161033f565b9050919050565b6000602082019050818103600083015261040381610362565b9050919050565b600060208201905061041f6000830184610385565b92915050565b600082825260208201905092915050565b600061044182610454565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b7f46617563657420456d7074792100000000000000000000000000000000000000600082015250565b7f5468652061646472657373206861732067657421000000000000000000000000600082015250565b6104de81610436565b81146104e957600080fd5b50565b6104f581610474565b811461050057600080fd5b5056fea264697066735822122034875a921875040770ed82eca1bba27a36a9e580e412aa83e91620adcdeb176464736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x54B1F84F EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x55A373D6 EQ PUSH2 0x6F JUMPI DUP1 PUSH4 0xB46300EC EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0xC44D5DDC EQ PUSH2 0x97 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x59 PUSH2 0xC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66 SWAP2 SWAP1 PUSH2 0x40A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x77 PUSH2 0xCD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x84 SWAP2 SWAP1 PUSH2 0x394 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0xF3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x2C7 JUMP JUMPDEST PUSH2 0x27D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x3AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x186 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D SWAP1 PUSH2 0x3EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x394 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x215 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x2F4 JUMP JUMPDEST LT ISZERO PUSH2 0x27A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x271 SWAP1 PUSH2 0x3CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AC DUP2 PUSH2 0x4D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C1 DUP2 PUSH2 0x4EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DD JUMPI PUSH2 0x2DC PUSH2 0x47E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2EB DUP5 DUP3 DUP6 ADD PUSH2 0x29D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30A JUMPI PUSH2 0x309 PUSH2 0x47E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x318 DUP5 DUP3 DUP6 ADD PUSH2 0x2B2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x32A DUP2 PUSH2 0x436 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x339 DUP2 PUSH2 0x448 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34C PUSH1 0xD DUP4 PUSH2 0x425 JUMP JUMPDEST SWAP2 POP PUSH2 0x357 DUP3 PUSH2 0x483 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36F PUSH1 0x14 DUP4 PUSH2 0x425 JUMP JUMPDEST SWAP2 POP PUSH2 0x37A DUP3 PUSH2 0x4AC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x38E DUP2 PUSH2 0x474 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3A9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x321 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3C4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x330 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3E3 DUP2 PUSH2 0x33F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x403 DUP2 PUSH2 0x362 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x41F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x385 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x441 DUP3 PUSH2 0x454 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x46617563657420456D7074792100000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5468652061646472657373206861732067657421000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x4DE DUP2 PUSH2 0x436 JUMP JUMPDEST DUP2 EQ PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4F5 DUP2 PUSH2 0x474 JUMP JUMPDEST DUP2 EQ PUSH2 0x500 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLVALUE DUP8 GAS SWAP3 XOR PUSH22 0x40770ED82ECA1BBA27A36A9E580E412AA83E91620AD 0xCD 0xEB OR PUSH5 0x64736F6C63 NUMBER STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "116:560:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;138:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;176:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;436:237;;;:::i;:::-;;211:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;138:31;;;;:::o;176:28::-;;;;;;;;;;;;;:::o;436:237::-;515:4;485:34;;:14;:26;500:10;485:26;;;;;;;;;;;;;;;;;;;;;;;;;:34;;;476:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;555:8;573:13;;;;;;;;;;;555:32;;636:10;;606:1;:11;;;626:4;606:26;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;598:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;465:208;436:237::o;211:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;7:139:2:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:143::-;209:5;240:6;234:13;225:22;;256:33;283:5;256:33;:::i;:::-;152:143;;;;:::o;301:329::-;360:6;409:2;397:9;388:7;384:23;380:32;377:119;;;415:79;;:::i;:::-;377:119;535:1;560:53;605:7;596:6;585:9;581:22;560:53;:::i;:::-;550:63;;506:117;301:329;;;;:::o;636:351::-;706:6;755:2;743:9;734:7;730:23;726:32;723:119;;;761:79;;:::i;:::-;723:119;881:1;906:64;962:7;953:6;942:9;938:22;906:64;:::i;:::-;896:74;;852:128;636:351;;;;:::o;993:118::-;1080:24;1098:5;1080:24;:::i;:::-;1075:3;1068:37;993:118;;:::o;1117:109::-;1198:21;1213:5;1198:21;:::i;:::-;1193:3;1186:34;1117:109;;:::o;1232:366::-;1374:3;1395:67;1459:2;1454:3;1395:67;:::i;:::-;1388:74;;1471:93;1560:3;1471:93;:::i;:::-;1589:2;1584:3;1580:12;1573:19;;1232:366;;;:::o;1604:::-;1746:3;1767:67;1831:2;1826:3;1767:67;:::i;:::-;1760:74;;1843:93;1932:3;1843:93;:::i;:::-;1961:2;1956:3;1952:12;1945:19;;1604:366;;;:::o;1976:118::-;2063:24;2081:5;2063:24;:::i;:::-;2058:3;2051:37;1976:118;;:::o;2100:222::-;2193:4;2231:2;2220:9;2216:18;2208:26;;2244:71;2312:1;2301:9;2297:17;2288:6;2244:71;:::i;:::-;2100:222;;;;:::o;2328:210::-;2415:4;2453:2;2442:9;2438:18;2430:26;;2466:65;2528:1;2517:9;2513:17;2504:6;2466:65;:::i;:::-;2328:210;;;;:::o;2544:419::-;2710:4;2748:2;2737:9;2733:18;2725:26;;2797:9;2791:4;2787:20;2783:1;2772:9;2768:17;2761:47;2825:131;2951:4;2825:131;:::i;:::-;2817:139;;2544:419;;;:::o;2969:::-;3135:4;3173:2;3162:9;3158:18;3150:26;;3222:9;3216:4;3212:20;3208:1;3197:9;3193:17;3186:47;3250:131;3376:4;3250:131;:::i;:::-;3242:139;;2969:419;;;:::o;3394:222::-;3487:4;3525:2;3514:9;3510:18;3502:26;;3538:71;3606:1;3595:9;3591:17;3582:6;3538:71;:::i;:::-;3394:222;;;;:::o;3703:169::-;3787:11;3821:6;3816:3;3809:19;3861:4;3856:3;3852:14;3837:29;;3703:169;;;;:::o;3878:96::-;3915:7;3944:24;3962:5;3944:24;:::i;:::-;3933:35;;3878:96;;;:::o;3980:90::-;4014:7;4057:5;4050:13;4043:21;4032:32;;3980:90;;;:::o;4076:126::-;4113:7;4153:42;4146:5;4142:54;4131:65;;4076:126;;;:::o;4208:77::-;4245:7;4274:5;4263:16;;4208:77;;;:::o;4414:117::-;4523:1;4520;4513:12;4537:163;4677:15;4673:1;4665:6;4661:14;4654:39;4537:163;:::o;4706:170::-;4846:22;4842:1;4834:6;4830:14;4823:46;4706:170;:::o;4882:122::-;4955:24;4973:5;4955:24;:::i;:::-;4948:5;4945:35;4935:63;;4994:1;4991;4984:12;4935:63;4882:122;:::o;5010:::-;5083:24;5101:5;5083:24;:::i;:::-;5076:5;5073:35;5063:63;;5122:1;5119;5112:12;5063:63;5010:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "267400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowanceA()": "2407",
								"requestAddress(address)": "2889",
								"send()": "infinite",
								"tokenContract()": "2514"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 116,
									"end": 676,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 116,
									"end": 676,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 116,
									"end": 676,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 166,
									"end": 169,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 138,
									"end": 169,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 169,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 344,
									"end": 428,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 344,
									"end": 428,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 344,
									"end": 428,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 344,
									"end": 428,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 428,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 344,
									"end": 428,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 344,
									"end": 428,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 344,
									"end": 428,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 344,
									"end": 428,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 344,
									"end": 428,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 344,
									"end": 428,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 344,
									"end": 428,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 344,
									"end": 428,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 344,
									"end": 428,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 344,
									"end": 428,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 344,
									"end": 428,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 344,
									"end": 428,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 344,
									"end": 428,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 344,
									"end": 428,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 344,
									"end": 428,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 344,
									"end": 428,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 344,
									"end": 428,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 344,
									"end": 428,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 344,
									"end": 428,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 344,
									"end": 428,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 344,
									"end": 428,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 344,
									"end": 428,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 344,
									"end": 428,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 344,
									"end": 428,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 344,
									"end": 428,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 344,
									"end": 428,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 344,
									"end": 428,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 344,
									"end": 428,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 344,
									"end": 428,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 344,
									"end": 428,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 406,
									"end": 420,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 390,
									"end": 403,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 390,
									"end": 403,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 390,
									"end": 420,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 390,
									"end": 420,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 390,
									"end": 420,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 390,
									"end": 420,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 390,
									"end": 420,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 390,
									"end": 420,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 390,
									"end": 420,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 390,
									"end": 420,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 390,
									"end": 420,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 390,
									"end": 420,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 390,
									"end": 420,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 390,
									"end": 420,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 390,
									"end": 420,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 390,
									"end": 420,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 390,
									"end": 420,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 390,
									"end": 420,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 390,
									"end": 420,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 390,
									"end": 420,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 344,
									"end": 428,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 116,
									"end": 676,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 116,
									"end": 676,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 275,
									"end": 277,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 263,
									"end": 272,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 254,
									"end": 261,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 250,
									"end": 273,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 246,
									"end": 278,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 281,
									"end": 360,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 243,
									"end": 362,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 243,
									"end": 362,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 401,
									"end": 402,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 426,
									"end": 490,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 426,
									"end": 490,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 416,
									"end": 490,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 416,
									"end": 490,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 372,
									"end": 500,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 156,
									"end": 507,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 631,
									"end": 638,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 678,
									"end": 683,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 660,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 660,
									"end": 684,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 649,
									"end": 684,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 649,
									"end": 684,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 594,
									"end": 690,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 733,
									"end": 740,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 773,
									"end": 815,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 766,
									"end": 771,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 762,
									"end": 816,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 751,
									"end": 816,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 751,
									"end": 816,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 822,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 951,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1060,
									"end": 1061,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1057,
									"end": 1058,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1050,
									"end": 1062,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1165,
									"end": 1170,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 1147,
									"end": 1171,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1140,
									"end": 1145,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1137,
									"end": 1172,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1186,
									"end": 1187,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1183,
									"end": 1184,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1176,
									"end": 1188,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1127,
									"end": 1190,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1074,
									"end": 1196,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 116,
									"end": 676,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 116,
									"end": 676,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 116,
									"end": 676,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 676,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 116,
									"end": 676,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 676,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 676,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 116,
									"end": 676,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 676,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122034875a921875040770ed82eca1bba27a36a9e580e412aa83e91620adcdeb176464736f6c63430008070033",
									".code": [
										{
											"begin": 116,
											"end": 676,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 116,
											"end": 676,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 116,
											"end": 676,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 116,
											"end": 676,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 116,
											"end": 676,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 676,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 116,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 676,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 676,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 676,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 116,
											"end": 676,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 116,
											"end": 676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 116,
											"end": 676,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 676,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 116,
											"end": 676,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 116,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 676,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 676,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 116,
											"end": 676,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 116,
											"end": 676,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 116,
											"end": 676,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 676,
											"name": "PUSH",
											"source": 1,
											"value": "54B1F84F"
										},
										{
											"begin": 116,
											"end": 676,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 116,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 116,
											"end": 676,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 676,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 676,
											"name": "PUSH",
											"source": 1,
											"value": "55A373D6"
										},
										{
											"begin": 116,
											"end": 676,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 116,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 676,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 676,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 676,
											"name": "PUSH",
											"source": 1,
											"value": "B46300EC"
										},
										{
											"begin": 116,
											"end": 676,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 116,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 116,
											"end": 676,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 676,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 676,
											"name": "PUSH",
											"source": 1,
											"value": "C44D5DDC"
										},
										{
											"begin": 116,
											"end": 676,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 116,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 116,
											"end": 676,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 116,
											"end": 676,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 116,
											"end": 676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 676,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 116,
											"end": 676,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 138,
											"end": 169,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 138,
											"end": 169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 138,
											"end": 169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 138,
											"end": 169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 138,
											"end": 169,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 138,
											"end": 169,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 138,
											"end": 169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 138,
											"end": 169,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 138,
											"end": 169,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 138,
											"end": 169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 138,
											"end": 169,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 138,
											"end": 169,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 138,
											"end": 169,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 138,
											"end": 169,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 138,
											"end": 169,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 138,
											"end": 169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 138,
											"end": 169,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 138,
											"end": 169,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 138,
											"end": 169,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 138,
											"end": 169,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 138,
											"end": 169,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 138,
											"end": 169,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 138,
											"end": 169,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 176,
											"end": 204,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 176,
											"end": 204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 176,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 176,
											"end": 204,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 176,
											"end": 204,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 176,
											"end": 204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 204,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 176,
											"end": 204,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 176,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 176,
											"end": 204,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 176,
											"end": 204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 176,
											"end": 204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 176,
											"end": 204,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 176,
											"end": 204,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 176,
											"end": 204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 204,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 176,
											"end": 204,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 176,
											"end": 204,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 176,
											"end": 204,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 176,
											"end": 204,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 176,
											"end": 204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 176,
											"end": 204,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 436,
											"end": 673,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 436,
											"end": 673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 436,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 436,
											"end": 673,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 436,
											"end": 673,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 436,
											"end": 673,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 436,
											"end": 673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 436,
											"end": 673,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 211,
											"end": 257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 211,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 211,
											"end": 257,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 211,
											"end": 257,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 211,
											"end": 257,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 211,
											"end": 257,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 211,
											"end": 257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 211,
											"end": 257,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 211,
											"end": 257,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 211,
											"end": 257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 211,
											"end": 257,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 211,
											"end": 257,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 211,
											"end": 257,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 211,
											"end": 257,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 211,
											"end": 257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 211,
											"end": 257,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 138,
											"end": 169,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 138,
											"end": 169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 138,
											"end": 169,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 169,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 138,
											"end": 169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 138,
											"end": 169,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 176,
											"end": 204,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 176,
											"end": 204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 204,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 176,
											"end": 204,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 176,
											"end": 204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 176,
											"end": 204,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 176,
											"end": 204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 176,
											"end": 204,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 176,
											"end": 204,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 176,
											"end": 204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 176,
											"end": 204,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 176,
											"end": 204,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 176,
											"end": 204,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 176,
											"end": 204,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 176,
											"end": 204,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 436,
											"end": 673,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 436,
											"end": 673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 515,
											"end": 519,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 485,
											"end": 519,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 485,
											"end": 519,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 485,
											"end": 499,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 485,
											"end": 511,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 510,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 485,
											"end": 511,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 485,
											"end": 511,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 511,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 511,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 485,
											"end": 511,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 485,
											"end": 511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 485,
											"end": 511,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 485,
											"end": 511,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 485,
											"end": 511,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 485,
											"end": 519,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 485,
											"end": 519,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 485,
											"end": 519,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 476,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 476,
											"end": 544,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 476,
											"end": 544,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 476,
											"end": 544,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 476,
											"end": 544,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 476,
											"end": 544,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 476,
											"end": 544,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 476,
											"end": 544,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 476,
											"end": 544,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 476,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 476,
											"end": 544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 476,
											"end": 544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 476,
											"end": 544,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 476,
											"end": 544,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 476,
											"end": 544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 476,
											"end": 544,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 476,
											"end": 544,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 476,
											"end": 544,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 476,
											"end": 544,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 476,
											"end": 544,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 476,
											"end": 544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 476,
											"end": 544,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 476,
											"end": 544,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 476,
											"end": 544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 555,
											"end": 563,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 573,
											"end": 586,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 573,
											"end": 586,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 573,
											"end": 586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 573,
											"end": 586,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 573,
											"end": 586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 573,
											"end": 586,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 573,
											"end": 586,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 573,
											"end": 586,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 573,
											"end": 586,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 573,
											"end": 586,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 573,
											"end": 586,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 555,
											"end": 587,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 555,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 636,
											"end": 646,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 646,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 606,
											"end": 607,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 606,
											"end": 617,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 606,
											"end": 617,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 606,
											"end": 617,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 626,
											"end": 630,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 606,
											"end": 632,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 606,
											"end": 632,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 606,
											"end": 632,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 606,
											"end": 632,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 606,
											"end": 632,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 606,
											"end": 632,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 606,
											"end": 632,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 606,
											"end": 632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 606,
											"end": 632,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 606,
											"end": 632,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 606,
											"end": 632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 606,
											"end": 632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 606,
											"end": 632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 606,
											"end": 632,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 606,
											"end": 632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 606,
											"end": 632,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 606,
											"end": 632,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 606,
											"end": 632,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 606,
											"end": 632,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 606,
											"end": 632,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 606,
											"end": 632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 606,
											"end": 632,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 606,
											"end": 632,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 606,
											"end": 632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 606,
											"end": 646,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 606,
											"end": 646,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 598,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 598,
											"end": 663,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 598,
											"end": 663,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 598,
											"end": 663,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 598,
											"end": 663,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 598,
											"end": 663,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 598,
											"end": 663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 598,
											"end": 663,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 598,
											"end": 663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 598,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 598,
											"end": 663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 598,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 598,
											"end": 663,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 598,
											"end": 663,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 598,
											"end": 663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 598,
											"end": 663,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 598,
											"end": 663,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 598,
											"end": 663,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 598,
											"end": 663,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 598,
											"end": 663,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 598,
											"end": 663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 598,
											"end": 663,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 598,
											"end": 663,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 598,
											"end": 663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 465,
											"end": 673,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 436,
											"end": 673,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 211,
											"end": 257,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 211,
											"end": 257,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 211,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 211,
											"end": 257,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 211,
											"end": 257,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 211,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 211,
											"end": 257,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 211,
											"end": 257,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 211,
											"end": 257,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 211,
											"end": 257,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 211,
											"end": 257,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 295,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 152,
											"end": 295,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 209,
											"end": 214,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 240,
											"end": 246,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 234,
											"end": 247,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 225,
											"end": 247,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 225,
											"end": 247,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 256,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 283,
											"end": 288,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 256,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 256,
											"end": 289,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 256,
											"end": 289,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 256,
											"end": 289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 152,
											"end": 295,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 152,
											"end": 295,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 152,
											"end": 295,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 295,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 152,
											"end": 295,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 301,
											"end": 630,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 301,
											"end": 630,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 360,
											"end": 366,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 409,
											"end": 411,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 397,
											"end": 406,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 388,
											"end": 395,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 384,
											"end": 407,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 380,
											"end": 412,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 377,
											"end": 496,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 377,
											"end": 496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 377,
											"end": 496,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 415,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 415,
											"end": 494,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 377,
											"end": 496,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 377,
											"end": 496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 535,
											"end": 536,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 560,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 605,
											"end": 612,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 596,
											"end": 602,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 585,
											"end": 594,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 581,
											"end": 603,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 560,
											"end": 613,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 560,
											"end": 613,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 560,
											"end": 613,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 560,
											"end": 613,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 550,
											"end": 613,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 550,
											"end": 613,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 506,
											"end": 623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 301,
											"end": 630,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 301,
											"end": 630,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 301,
											"end": 630,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 301,
											"end": 630,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 301,
											"end": 630,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 636,
											"end": 987,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 636,
											"end": 987,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 706,
											"end": 712,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 755,
											"end": 757,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 743,
											"end": 752,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 734,
											"end": 741,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 730,
											"end": 753,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 726,
											"end": 758,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 723,
											"end": 842,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 723,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 723,
											"end": 842,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 761,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 761,
											"end": 840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 761,
											"end": 840,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 761,
											"end": 840,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 761,
											"end": 840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 723,
											"end": 842,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 723,
											"end": 842,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 881,
											"end": 882,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 962,
											"end": 969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 953,
											"end": 959,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 942,
											"end": 951,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 938,
											"end": 960,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 906,
											"end": 970,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 906,
											"end": 970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 896,
											"end": 970,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 896,
											"end": 970,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 852,
											"end": 980,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 636,
											"end": 987,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 636,
											"end": 987,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 636,
											"end": 987,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 636,
											"end": 987,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 636,
											"end": 987,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 993,
											"end": 1111,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 993,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1080,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1080,
											"end": 1104,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 1080,
											"end": 1104,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1080,
											"end": 1104,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 1080,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1075,
											"end": 1078,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1068,
											"end": 1105,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 993,
											"end": 1111,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 993,
											"end": 1111,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 993,
											"end": 1111,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1117,
											"end": 1226,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1117,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1198,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1213,
											"end": 1218,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1198,
											"end": 1219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1198,
											"end": 1219,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1198,
											"end": 1219,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1198,
											"end": 1219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1193,
											"end": 1196,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1186,
											"end": 1220,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1226,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1226,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1117,
											"end": 1226,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1232,
											"end": 1598,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 1232,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1374,
											"end": 1377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1395,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1459,
											"end": 1461,
											"name": "PUSH",
											"source": 2,
											"value": "D"
										},
										{
											"begin": 1454,
											"end": 1457,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1395,
											"end": 1462,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1395,
											"end": 1462,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1395,
											"end": 1462,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1395,
											"end": 1462,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1462,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1388,
											"end": 1462,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1471,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1560,
											"end": 1563,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1471,
											"end": 1564,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1471,
											"end": 1564,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1471,
											"end": 1564,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1471,
											"end": 1564,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1589,
											"end": 1591,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1584,
											"end": 1587,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1580,
											"end": 1592,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1592,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1592,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1232,
											"end": 1598,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1232,
											"end": 1598,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1232,
											"end": 1598,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1232,
											"end": 1598,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1604,
											"end": 1970,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1604,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1749,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1831,
											"end": 1833,
											"name": "PUSH",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1826,
											"end": 1829,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 1767,
											"end": 1834,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1767,
											"end": 1834,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1767,
											"end": 1834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1760,
											"end": 1834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1932,
											"end": 1935,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1843,
											"end": 1936,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1843,
											"end": 1936,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1843,
											"end": 1936,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1843,
											"end": 1936,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1961,
											"end": 1963,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1956,
											"end": 1959,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1952,
											"end": 1964,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1964,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1945,
											"end": 1964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1604,
											"end": 1970,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1604,
											"end": 1970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1604,
											"end": 1970,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1604,
											"end": 1970,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1976,
											"end": 2094,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1976,
											"end": 2094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2063,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2081,
											"end": 2086,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2063,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 2063,
											"end": 2087,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2063,
											"end": 2087,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 2063,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2058,
											"end": 2061,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2051,
											"end": 2088,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1976,
											"end": 2094,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2100,
											"end": 2322,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2100,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2193,
											"end": 2197,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2231,
											"end": 2233,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2220,
											"end": 2229,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2216,
											"end": 2234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2208,
											"end": 2234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2208,
											"end": 2234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2244,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2312,
											"end": 2313,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2301,
											"end": 2310,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2297,
											"end": 2314,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2288,
											"end": 2294,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2244,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 2244,
											"end": 2315,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2315,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2244,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2100,
											"end": 2322,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2100,
											"end": 2322,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2100,
											"end": 2322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2100,
											"end": 2322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2100,
											"end": 2322,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2328,
											"end": 2538,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2328,
											"end": 2538,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2415,
											"end": 2419,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2453,
											"end": 2455,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2451,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2528,
											"end": 2529,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2517,
											"end": 2526,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2513,
											"end": 2530,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2504,
											"end": 2510,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2466,
											"end": 2531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2466,
											"end": 2531,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2466,
											"end": 2531,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2466,
											"end": 2531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2538,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2538,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2538,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2328,
											"end": 2538,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2544,
											"end": 2963,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 2544,
											"end": 2963,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2710,
											"end": 2714,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2748,
											"end": 2750,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2737,
											"end": 2746,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2733,
											"end": 2751,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2751,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2751,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2797,
											"end": 2806,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2791,
											"end": 2795,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2787,
											"end": 2807,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2772,
											"end": 2781,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2768,
											"end": 2785,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2761,
											"end": 2808,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2951,
											"end": 2955,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2825,
											"end": 2956,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2825,
											"end": 2956,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2825,
											"end": 2956,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2825,
											"end": 2956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 2956,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2817,
											"end": 2956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2544,
											"end": 2963,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2544,
											"end": 2963,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2544,
											"end": 2963,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2544,
											"end": 2963,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2969,
											"end": 3388,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2969,
											"end": 3388,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3135,
											"end": 3139,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3175,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3162,
											"end": 3171,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3158,
											"end": 3176,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3150,
											"end": 3176,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3150,
											"end": 3176,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3222,
											"end": 3231,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3216,
											"end": 3220,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3212,
											"end": 3232,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3208,
											"end": 3209,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3197,
											"end": 3206,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3193,
											"end": 3210,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3186,
											"end": 3233,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3376,
											"end": 3380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3250,
											"end": 3381,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3250,
											"end": 3381,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3250,
											"end": 3381,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3250,
											"end": 3381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3242,
											"end": 3381,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3242,
											"end": 3381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3388,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3388,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3388,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2969,
											"end": 3388,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3394,
											"end": 3616,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3394,
											"end": 3616,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3491,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3525,
											"end": 3527,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3514,
											"end": 3523,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3502,
											"end": 3528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3502,
											"end": 3528,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3606,
											"end": 3607,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3595,
											"end": 3604,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3591,
											"end": 3608,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3582,
											"end": 3588,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3538,
											"end": 3609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3538,
											"end": 3609,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3538,
											"end": 3609,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3538,
											"end": 3609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3616,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3616,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3616,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3394,
											"end": 3616,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3703,
											"end": 3872,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3703,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3787,
											"end": 3798,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3821,
											"end": 3827,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3816,
											"end": 3819,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3809,
											"end": 3828,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 3865,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3856,
											"end": 3859,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3852,
											"end": 3866,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3837,
											"end": 3866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3837,
											"end": 3866,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3703,
											"end": 3872,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3703,
											"end": 3872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3703,
											"end": 3872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3703,
											"end": 3872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3703,
											"end": 3872,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3878,
											"end": 3974,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3878,
											"end": 3974,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3915,
											"end": 3922,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3944,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3962,
											"end": 3967,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3944,
											"end": 3968,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3944,
											"end": 3968,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3944,
											"end": 3968,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3944,
											"end": 3968,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3933,
											"end": 3968,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3933,
											"end": 3968,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3878,
											"end": 3974,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3878,
											"end": 3974,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3878,
											"end": 3974,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3878,
											"end": 3974,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3980,
											"end": 4070,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3980,
											"end": 4070,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4014,
											"end": 4021,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4057,
											"end": 4062,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4050,
											"end": 4063,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4043,
											"end": 4064,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4064,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4032,
											"end": 4064,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3980,
											"end": 4070,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3980,
											"end": 4070,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3980,
											"end": 4070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3980,
											"end": 4070,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4113,
											"end": 4120,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4153,
											"end": 4195,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4146,
											"end": 4151,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4142,
											"end": 4196,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4196,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4131,
											"end": 4196,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4076,
											"end": 4202,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4208,
											"end": 4285,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 4208,
											"end": 4285,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4245,
											"end": 4252,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4274,
											"end": 4279,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4263,
											"end": 4279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4263,
											"end": 4279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4285,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4285,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4285,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4208,
											"end": 4285,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4414,
											"end": 4531,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4414,
											"end": 4531,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4523,
											"end": 4524,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4520,
											"end": 4521,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4513,
											"end": 4525,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4537,
											"end": 4700,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 4537,
											"end": 4700,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4677,
											"end": 4692,
											"name": "PUSH",
											"source": 2,
											"value": "46617563657420456D7074792100000000000000000000000000000000000000"
										},
										{
											"begin": 4673,
											"end": 4674,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4665,
											"end": 4671,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4661,
											"end": 4675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4693,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4537,
											"end": 4700,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4537,
											"end": 4700,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4706,
											"end": 4876,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4706,
											"end": 4876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4846,
											"end": 4868,
											"name": "PUSH",
											"source": 2,
											"value": "5468652061646472657373206861732067657421000000000000000000000000"
										},
										{
											"begin": 4842,
											"end": 4843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4834,
											"end": 4840,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4830,
											"end": 4844,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4823,
											"end": 4869,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4706,
											"end": 4876,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4706,
											"end": 4876,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4882,
											"end": 5004,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4882,
											"end": 5004,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4955,
											"end": 4979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4973,
											"end": 4978,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4955,
											"end": 4979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4955,
											"end": 4979,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4955,
											"end": 4979,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4955,
											"end": 4979,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4948,
											"end": 4953,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4945,
											"end": 4980,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4935,
											"end": 4998,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4935,
											"end": 4998,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4994,
											"end": 4995,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4991,
											"end": 4992,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4984,
											"end": 4996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4935,
											"end": 4998,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4935,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 5004,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4882,
											"end": 5004,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 5010,
											"end": 5132,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5010,
											"end": 5132,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5083,
											"end": 5107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5101,
											"end": 5106,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5083,
											"end": 5107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 5083,
											"end": 5107,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 5083,
											"end": 5107,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 5083,
											"end": 5107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5076,
											"end": 5081,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5108,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5063,
											"end": 5126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5063,
											"end": 5126,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5122,
											"end": 5123,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5119,
											"end": 5120,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5112,
											"end": 5124,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5063,
											"end": 5126,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 5063,
											"end": 5126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5132,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5010,
											"end": 5132,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"allowanceA()": "54b1f84f",
							"requestAddress(address)": "c44d5ddc",
							"send()": "b46300ec",
							"tokenContract()": "55a373d6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"Receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"Amount\",\"type\":\"uint256\"}],\"name\":\"SendToken\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"allowanceA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"requestAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"\\u6c34\\u9f99\\u5934/Faucet.sol\":\"Faucet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"ERC20/IERC20.sol\":{\"keccak256\":\"0x45e083595645ce346eca36a83c5aea73e3955314709dadab861fa7fa091c1af3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6910705030ee7e44f036c5de940030badc4d8070ce1c5ca8cfdf2f4366a693c0\",\"dweb:/ipfs/QmfNzDH2pwu92sAsz4LdeBhx1cwauZvNUcyhMC85oVhNgb\"]},\"\\u6c34\\u9f99\\u5934/Faucet.sol\":{\"keccak256\":\"0x5f740791c6e8cccd6062e2b547d4b77f560b3c588ad809224e6773193a559ac7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8bdd439666a62de5ce3b4af524f1757bde08570b591bb630f21d2ccf666a461\",\"dweb:/ipfs/QmcfDztFERg2iZBAMBkr1Hg1L4d29Ap36xnbNhaz1sbvER\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 83,
								"contract": "水龙头/Faucet.sol:Faucet",
								"label": "allowanceA",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 85,
								"contract": "水龙头/Faucet.sol:Faucet",
								"label": "tokenContract",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 89,
								"contract": "水龙头/Faucet.sol:Faucet",
								"label": "requestAddress",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "60:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "87:37:0",
								"text": " @dev ERC20 接口合约."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "136:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "150:119:0",
										"text": " @dev 释放条件：当 `value` 单位的货币从账户 (`from`) 转账到另一账户 (`to`)时."
									},
									"id": 11,
									"name": "Transfer",
									"nameLocation": "281:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "306:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "290:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "290:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "328:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "312:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "312:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "340:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "332:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "332:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "289:57:0"
									},
									"src": "275:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "355:125:0",
										"text": " @dev 释放条件：当 `value` 单位的货币从账户 (`owner`) 授权给另一账户 (`spender`)时."
									},
									"id": 20,
									"name": "Approval",
									"nameLocation": "492:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "517:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "501:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "501:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "540:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "524:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "524:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "557:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "549:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "549:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:63:0"
									},
									"src": "486:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "572:48:0",
										"text": " @dev 返回代币总供给."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "635:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "646:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "672:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "672:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "671:9:0"
									},
									"scope": 77,
									"src": "626:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "689:69:0",
										"text": " @dev 返回账户`account`所持有的代币数."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "773:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "791:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "783:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "783:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "782:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "823:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:9:0"
									},
									"scope": 77,
									"src": "764:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "840:184:0",
										"text": " @dev 转账 `amount` 单位代币，从调用者账户到另一账户 `to`.\n 如果成功，返回 `true`.\n 释放 {Transfer} 事件."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1039:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1056:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1048:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1048:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1068:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1060:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1047:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1094:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1094:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:6:0"
									},
									"scope": 77,
									"src": "1030:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1108:179:0",
										"text": " @dev 返回`owner`账户授权给`spender`账户的额度，默认为0。\n 当{approve} 或 {transferFrom} 被调用时，`allowance`会改变."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1302:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1320:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1312:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1312:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1335:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1327:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1327:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1311:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1367:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1367:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1366:9:0"
									},
									"scope": 77,
									"src": "1293:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1384:177:0",
										"text": " @dev 调用者账户给`spender`账户授权 `amount`数量代币。\n 如果成功，返回 `true`.\n 释放 {Approval} 事件."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1576:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1592:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "1584:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1584:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1609:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "1601:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1583:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "1635:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1635:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1634:6:0"
									},
									"scope": 77,
									"src": "1567:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "1649:248:0",
										"text": " @dev 通过授权机制，从`from`账户向`to`账户转账`amount`数量代币。转账的部分会从调用者的`allowance`中扣除。\n 如果成功，返回 `true`.\n 释放 {Transfer} 事件."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1912:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1943:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1935:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1935:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1966:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1958:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1958:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1987:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "1979:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1979:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1924:76:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2019:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2019:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2018:6:0"
									},
									"scope": 77,
									"src": "1903:122:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "126:1902:0",
							"usedErrors": []
						}
					],
					"src": "60:1968:0"
				},
				"id": 0
			},
			"水龙头/Faucet.sol": {
				"ast": {
					"absolutePath": "水龙头/Faucet.sol",
					"exportedSymbols": {
						"Faucet": [
							140
						],
						"IERC20": [
							77
						]
					},
					"id": 141,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"absolutePath": "ERC20/IERC20.sol",
							"file": "../ERC20/IERC20.sol",
							"id": 79,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 141,
							"sourceUnit": 78,
							"src": "58:29:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"id": 80,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 140,
							"linearizedBaseContracts": [
								140
							],
							"name": "Faucet",
							"nameLocation": "125:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "54b1f84f",
									"id": 83,
									"mutability": "mutable",
									"name": "allowanceA",
									"nameLocation": "153:10:1",
									"nodeType": "VariableDeclaration",
									"scope": 140,
									"src": "138:31:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 81,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "138:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 82,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "166:3:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "55a373d6",
									"id": 85,
									"mutability": "mutable",
									"name": "tokenContract",
									"nameLocation": "191:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 140,
									"src": "176:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 84,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "176:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c44d5ddc",
									"id": 89,
									"mutability": "mutable",
									"name": "requestAddress",
									"nameLocation": "243:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 140,
									"src": "211:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 88,
										"keyType": {
											"id": 86,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "219:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "211:24:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 87,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "230:4:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 95,
									"name": "SendToken",
									"nameLocation": "276:9:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"indexed": true,
												"mutability": "mutable",
												"name": "Receiver",
												"nameLocation": "302:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "286:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "286:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"indexed": true,
												"mutability": "mutable",
												"name": "Amount",
												"nameLocation": "328:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "312:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "312:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "285:50:1"
									},
									"src": "270:66:1"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "379:49:1",
										"statements": [
											{
												"expression": {
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 100,
														"name": "tokenContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "390:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 101,
														"name": "_tokenContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "406:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "390:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "390:30:1"
											}
										]
									},
									"id": 105,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "_tokenContract",
												"nameLocation": "364:14:1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "356:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:24:1"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "379:0:1"
									},
									"scope": 140,
									"src": "344:84:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "465:208:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 109,
																	"name": "requestAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 89,
																	"src": "485:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 112,
																"indexExpression": {
																	"expression": {
																		"id": 110,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "500:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 111,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "500:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "485:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "74727565",
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "515:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"src": "485:34:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468652061646472657373206861732067657421",
															"id": 115,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "521:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e49545dc5a09be773f86ee453e8e530ac1fcba422dee72705ccff496f57df94f",
																"typeString": "literal_string \"The address has get!\""
															},
															"value": "The address has get!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e49545dc5a09be773f86ee453e8e530ac1fcba422dee72705ccff496f57df94f",
																"typeString": "literal_string \"The address has get!\""
															}
														],
														"id": 108,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "476:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "476:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 117,
												"nodeType": "ExpressionStatement",
												"src": "476:68:1"
											},
											{
												"assignments": [
													120
												],
												"declarations": [
													{
														"constant": false,
														"id": 120,
														"mutability": "mutable",
														"name": "t",
														"nameLocation": "562:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 138,
														"src": "555:8:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														},
														"typeName": {
															"id": 119,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 118,
																"name": "IERC20",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 77,
																"src": "555:6:1"
															},
															"referencedDeclaration": 77,
															"src": "555:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 124,
												"initialValue": {
													"arguments": [
														{
															"id": 122,
															"name": "tokenContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "573:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "IERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "566:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
															"typeString": "type(contract IERC20)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "566:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "555:32:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 134,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 130,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "626:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Faucet_$140",
																					"typeString": "contract Faucet"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Faucet_$140",
																					"typeString": "contract Faucet"
																				}
																			],
																			"id": 129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "618:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 128,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "618:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "618:13:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 126,
																		"name": "t",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 120,
																		"src": "606:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 34,
																	"src": "606:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "606:26:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 133,
																"name": "allowanceA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "636:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "606:40:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46617563657420456d70747921",
															"id": 135,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "647:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b599f9a995c4b4245205b1dcd3cd52f2b440af1a93e11e35e14992fecf0a3bc7",
																"typeString": "literal_string \"Faucet Empty!\""
															},
															"value": "Faucet Empty!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b599f9a995c4b4245205b1dcd3cd52f2b440af1a93e11e35e14992fecf0a3bc7",
																"typeString": "literal_string \"Faucet Empty!\""
															}
														],
														"id": 125,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "598:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "598:65:1"
											}
										]
									},
									"functionSelector": "b46300ec",
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "send",
									"nameLocation": "445:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "449:2:1"
									},
									"returnParameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "465:0:1"
									},
									"scope": 140,
									"src": "436:237:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 141,
							"src": "116:560:1",
							"usedErrors": []
						}
					],
					"src": "58:618:1"
				},
				"id": 1
			}
		}
	}
}